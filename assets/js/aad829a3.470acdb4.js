"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[4254],{8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>c});var s=o(6540);const r={},n=s.createContext(r);function i(e){const t=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(n.Provider,{value:t},e.children)}},9295:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"ops/security","title":"Security Considerations","description":"Remote MPFS Service","source":"@site/docs/ops/security.md","sourceDirName":"ops","slug":"/ops/security","permalink":"/moog/docs/ops/security","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/moog/tree/main/docs/docs/ops/security.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Real-World Scenario","permalink":"/moog/docs/ops/real-world"},"next":{"title":"Architecture Overview","permalink":"/moog/docs/ops/architecture"}}');var r=o(4848),n=o(8453);const i={},c="Security Considerations",a={},u=[{value:"Remote MPFS Service",id:"remote-mpfs-service",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"security-considerations",children:"Security Considerations"})}),"\n",(0,r.jsx)(t.h2,{id:"remote-mpfs-service",children:"Remote MPFS Service"}),"\n",(0,r.jsx)(t.p,{children:"The MPFS service is not able to sign transactions for the user. Nevertheless the current implementation doesn't perform any intent-check on the unsigned transactions it receives. Therefore, when using a remote MPFS service, users should ensure that they trust the operator of the service, as a malicious operator could potentially alter the unsigned transactions before sending them back to the user."}),"\n",(0,r.jsxs)(t.p,{children:["To improve the situation ",(0,r.jsx)(t.a,{href:"https://github.com/cardano-foundation/moog/issues",children:"an issue is open in GitHub"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);