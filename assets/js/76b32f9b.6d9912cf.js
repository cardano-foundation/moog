"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[5532],{7340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"ops/protocol","title":"Moog Protocol","description":"Context","source":"@site/docs/ops/protocol.md","sourceDirName":"ops","slug":"/ops/protocol","permalink":"/moog/docs/ops/protocol","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/moog/tree/main/docs/docs/ops/protocol.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/moog/docs/ops/architecture"},"next":{"title":"Oracle role manual","permalink":"/moog/docs/ops/oracle-role"}}');var i=n(4848),s=n(8453);const r={},a="Moog Protocol",c={},l=[{value:"Context",id:"context",level:2},{value:"Sequence Diagram",id:"sequence-diagram",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"moog-protocol",children:"Moog Protocol"})}),"\n",(0,i.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"alice"})," is a user who wants to run tests in Antithesis for her cardano-node"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"antithesis"})," is an agent that controls and monitors test-run's on the antithesis platform"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"token"})," is a stateful unique token locked on-chain tracking the interactions between ",(0,i.jsx)(t.code,{children:"alice"})," and ",(0,i.jsx)(t.code,{children:"antithesis"}),". As a side effect it tracks also alice github credentials and alice github roles. It's a fact container, with a smart contract controlling the update process of the facts."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"oracle"})," is an agent in charge of the ",(0,i.jsx)(t.code,{children:"token"})," updates. It does everything in its power to prevent inconsistent data to enter/exit the ",(0,i.jsx)(t.code,{children:"token"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,i.jsx)(t.mermaid,{value:"sequenceDiagram\n    participant GitHub as Github Platform\n    actor Alice\n    actor Oracle\n    participant Token as Cardano Token\n    actor Antithesis\n    participant AntithesisPlatform as Antithesis Platform\n\n\n    %% Step 1: Alice registers as an identified user\n    Alice->>+GitHub: Add an Ed25519 SSH key to github profile\n    Alice->>+Token: moog requester register-user\n    Oracle->>+GitHub: Validate alice credentials\n    Oracle->>+Token: moog oracle update-token\n\n    %% Step 2: Alice registers role as an antithesis test runner\n    Alice->>+GitHub: Add herself under Antithesis key in CODEOWNERS file in her repository\n    Alice->>+Token: moog requester register-role\n    Oracle->>+GitHub: Validate alice role in CODEOWNERS\n    Oracle->>+Token: moog oracle update-token\n\n    %% Step 3: Agent white-list alice repository\n    Antithesis->>+Token: moog agent white-list\n    Oracle->>+Token: Validate antithesis identity\n\n    %% Step 4: Alice requests test runs\n    loop alice test runs request\n    Alice->>+Token: moog requester create-test\n    Oracle->>+Token: Check alice is maintainer\n    Oracle->>+Token: Check platform/repo/commit prefix and run-index\n    Oracle->>+Token: Validate alice SSH signature of the request\n    Oracle->>+Token: moog oracle update-token\n\n    %% Step 5: Antithesis processes test run request\n    alt Antithesis rejects request\n        Antithesis->>+Token: moog agent reject-test\n        Oracle->>+Token: Validate antithesis identity and test state\n        Oracle->>+Token: moog oracle update-token\n    else Antithesis accepts request\n        Antithesis->>+AntithesisPlatform: Start test run\n        Antithesis->>+Oracle: moog agent accept-test\n        Oracle->>+Token: Validate antithesis identity and test state\n        Oracle->>+Token: moog oracle update-token\n    end\n\n    %% Step 6: Antithesis updates test run results\n    Antithesis->>+AntithesisPlatform: Poll platform for test results\n    Antithesis->>+Token: moog agent finish-test\n    Oracle->>+Token: Validate antithesis identity and test state\n    Oracle->>+Token: moog oracle update-token\n    end"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);