"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[8875],{7546:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"user/configuration","title":"Configuration","description":"Prerequisites","source":"@site/docs/user/configuration.md","sourceDirName":"user","slug":"/user/configuration","permalink":"/moog/docs/user/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/moog/tree/main/docs/docs/user/configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/moog/docs/user/installation"},"next":{"title":"Usage","permalink":"/moog/docs/user/usage"}}');var o=t(4848),a=t(8453),i=t(8972);const r={},l="Configuration",c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment variables and preliminaries",id:"environment-variables-and-preliminaries",level:3},{value:"MPFS host",id:"mpfs-host",level:4},{value:"Your wallet",id:"your-wallet",level:4},{value:"Antithesis token",id:"antithesis-token",level:4},{value:"Set the timeout for the <code>moog</code> command",id:"set-the-timeout-for-the-moog-command",level:4},{value:"Configuring access to GitHub",id:"configuring-access-to-github",level:4},{value:"Querying the token state",id:"querying-the-token-state",level:3},{value:"Querying facts of the Antithesis token",id:"querying-facts-of-the-antithesis-token",level:3}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.p,{children:["You must have previously ",(0,o.jsx)(n.a,{href:"/moog/docs/user/installation",children:"installed"})," Moog's CLI."]}),"\n",(0,o.jsx)(n.h3,{id:"environment-variables-and-preliminaries",children:"Environment variables and preliminaries"}),"\n",(0,o.jsx)(n.h4,{id:"mpfs-host",children:"MPFS host"}),"\n",(0,o.jsxs)(n.p,{children:["If you do not want to host your own MPFS service, you can use a public one at ",(0,o.jsx)(n.code,{children:"https://mpfs.plutimus.com"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In any case set the ",(0,o.jsx)(n.code,{children:"MOOG_MPFS_HOST"})," environment variable to point to the MPFS service you want to use."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export MOOG_MPFS_HOST=https://mpfs.plutimus.com\n"})}),"\n",(0,o.jsx)(n.h4,{id:"your-wallet",children:"Your wallet"}),"\n",(0,o.jsxs)(n.p,{children:["Moog is a ",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Decentralized_application",children:"DApp"}),' that\nallows one to request Antithesis tests execution by posting transactions to\nCardano blockchain (currently on preprod network). As such it requires a\n"wallet" to pay for fees and sign transactions.']}),"\n",(0,o.jsx)(n.p,{children:"Currently the Moog CLI works only by reading a wallet file containing a mnemonic phrase."}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"moog"})," command will read the wallet file from the ",(0,o.jsx)(n.code,{children:"MOOG_WALLET_FILE"})," environment variable."]}),"\n",(0,o.jsx)(i.A,{src:"/moog/video/wallet-create.cast",options:{autoplay:!1,theme:"asciinema",speed:1}}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export MOOG_WALLET_FILE=wallet.json\n"})}),"\n",(0,o.jsx)(n.p,{children:"Optionally you can provide a passphrase to encrypt the mnemonic phrase in the wallet file:"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Setting a passphrase is highly recommended to protect your wallet"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["A less secure way to provide the passphrase is to set the ",(0,o.jsx)(n.code,{children:"MOOG_WALLET_PASSPHRASE"})," environment variable:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'read -s -p "Enter your wallet passphrase: " MOOG_WALLET_PASSPHRASE\nexport MOOG_WALLET_PASSPHRASE\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can create a wallet file with the ",(0,o.jsx)(n.code,{children:"moog wallet create"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog wallet create\n"})}),"\n",(0,o.jsx)(n.p,{children:"A more secure way is to let the CLI prompt you for the passphrase when needed."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog wallet create --ask-wallet-passphrase\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you set the ",(0,o.jsx)(n.code,{children:"MOOG_INTERACTIVE_SECRETS"})," environment variable to any value, the CLI will prompt you for the passphrase every time it needs it."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export MOOG_INTERACTIVE_SECRETS=1\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can review this wallet info anytime with"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog wallet info\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can encrypt the wallet's secret (if previously you chose to store it in unencrypted way, ie., you used ",(0,o.jsx)(n.code,{children:"moog wallet create"}),") using"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog wallet encrypt path/to/encrypted/secret/file --ask-wallet-passphrase\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Also, you can decrypt previously encrypted wallet's secret (if previously you chose to store it in encrypted way, ie., you used ",(0,o.jsx)(n.code,{children:"moog wallet create --ask-wallet-passphrase"}),") using"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog wallet decrypt path/to/decrypted/secret/file\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For the both cases ",(0,o.jsx)(n.code,{children:"MOOG_WALLET_FILE"})," is set as before."]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsx)(n.p,{children:"Store a copy of your encrypted/plaintext wallet file in a password manager.\nThink twice before storing a plaintext wallet file. Store your passphrase in a\npassword manager too. Currently we do not support hardware wallets like Ledger\nor Trezor."})}),"\n",(0,o.jsxs)(n.p,{children:["Fund your wallet with some tAda tokens on preprod, for example using the\n",(0,o.jsx)(n.a,{href:"https://docs.cardano.org/cardano-testnets/tools/faucet/",children:"Cardano Testnet\nFaucet"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"antithesis-token",children:"Antithesis token"}),"\n",(0,o.jsxs)(n.p,{children:["This is the unique token that identifies the (Cardano Foundation) Antithesis access interface. You need to refer to it setting the ",(0,o.jsx)(n.code,{children:"MOOG_TOKEN_ID"})," environment variable."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export MOOG_TOKEN_ID=21c523c3b4565f1fc1ad7e54e82ca976f60997d8e7e9946826813fabf341069b\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"set-the-timeout-for-the-moog-command",children:["Set the timeout for the ",(0,o.jsx)(n.code,{children:"moog"})," command"]}),"\n",(0,o.jsx)(n.p,{children:"When submitting txs to the chain, it's quite convenient to wait for the transaction to be included in the chain, so that you can immediately use the result of the transaction."}),"\n",(0,o.jsxs)(n.p,{children:["To do that, you can set the ",(0,o.jsx)(n.code,{children:"MOOG_WAIT"})," environment variable to the number of seconds you want to wait for the transaction to be included in the chain."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export MOOG_WAIT=120\n"})}),"\n",(0,o.jsx)(n.h4,{id:"configuring-access-to-github",children:"Configuring access to GitHub"}),"\n",(0,o.jsx)(n.p,{children:"The tool will query the GitHub platform on your behalf in order to obtain (public) information about users, repositories and test assets as stored into repositories."}),"\n",(0,o.jsx)(n.p,{children:"In order to make this possible you must provide a GitHub Personal Access Token (PAT) for read-only access to public data. See the GitHub platform's documentation for how to create one."}),"\n",(0,o.jsx)(n.p,{children:"Provide your GitHub PAT to the tool by setting an environment variable:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'export MOOG_GITHUB_PAT="github_pat_31A...<snipped>...xL"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"querying-the-token-state",children:"Querying the token state"}),"\n",(0,o.jsx)(n.p,{children:"You can now query the state of the (Cardano Foundation) Antithesis token with the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog token\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will show"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"the token owner a.k.a. the oracle identity"}),"\n",(0,o.jsx)(n.li,{children:"the pending change requests"}),"\n",(0,o.jsx)(n.li,{children:"the root of the mpf tree"}),"\n",(0,o.jsx)(n.li,{children:"the current UTxO of the state"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"querying-facts-of-the-antithesis-token",children:"Querying facts of the Antithesis token"}),"\n",(0,o.jsx)(i.A,{src:"/moog/video/facts-querying.cast",options:{autoplay:!1,theme:"asciinema",speed:1}}),"\n",(0,o.jsx)(n.p,{children:"You can always query the Antithesis token and all its facts"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog facts\n"})}),"\n",(0,o.jsx)(n.p,{children:"But you can also query specific facts, for example to report the GitHub registered users:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog facts users\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or to query all test-run states:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog facts test-runs\n"})}),"\n",(0,o.jsx)(n.p,{children:"To report the pending test-runs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog facts test-runs pending\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can also query facts for a specific test-run id:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog facts test-runs -i id1 -i id2 ..\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This is useful if you stored the test-run id when you created the test-run.\nTest-run ids are facts ids so you can also look them up via ",(0,o.jsx)(n.code,{children:"moog facts"})]}),"\n",(0,o.jsx)(n.p,{children:"Finally"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"moog facts --help\n"})}),"\n",(0,o.jsx)(n.p,{children:"will show you all the available facts you can query."}),"\n",(0,o.jsx)(n.p,{children:"All facts come with their last-modification slot, that you can use to sort them. (Only externally via jq, currently)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'moog facts test-runs | jq \'[.[] | select(.key.repository.repo == "moog")] | sort_by(.slot) | last\' | jq\n{\n  "id": "1879281b7787d6e8cfc35e322510afd3438d53720e7e5731839deae2279e2f39",\n  "key": {\n    "commitId": "c5ce800a2a008237df21b4927d33f8b3d953f20b",\n    "directory": "compose/testnets/cardano_node_master",\n    "platform": "github",\n    "repository": {\n      "organization": "cardano-foundation",\n      "repo": "moog"\n    },\n    "requester": "cfhal",\n    "try": 1,\n    "type": "test-run"\n  },\n  "slot": 106050979,\n  "value": {\n    "duration": 1,\n    "from": {\n      "from": {\n        "duration": 1,\n        "phase": "pending",\n        "signature": "68d2457749aaeafea128f2fbdb05575ee1bb2961a2b4b42dc31631bcbdb29200a073a623ceedeb5ef770e1f79a6c92c5d0c6ccb023f89e60bbae4f794dafb20f"\n      },\n      "phase": "accepted"\n    },\n    "outcome": "success",\n    "phase": "finished",\n    "url": "Jqt4G6cEKgOH3n0nkNcN84jb/EU26UD1qMZRZpqB1uL7Fiaqab4X8EHnj1lEajxMOxMDd5CJejGBoBag09svp9zADaqYyXgwRSJFxjLYyZDbQVZL1QhUU6jRyAT79iFXzfUkq2mdvWX4ygsRZKklzZ0OD5qqF0SqTEjO8XT3l16NFlp5sqZJbTYzaWr2zxrpkcq3TJxMmGWrnrmgFFIvxw3G8ljZy3aNBEEt0AwUmVVf/PfNN+pp36paZtD2xOMoCBiDUeaTFeJt0r5laxsgVBzPJSWyj84yTiFZg7E+0cIxgRdx7A9PRrgFOwjXb+QQKPIOihCVauZga2fOLdS2mc6E9qGiApjm4q8Nv0Ii7VNiw3NYbINpW5VJ3XhE6gYWgV/sQWzPb3/kwofVgcCMAA7I9ADVA2EqFDRX6q5vqR99VZiLZsoMsyDIgoG2Rjm0/OwTbMsaNg5A9s73kJyRsPQG+/wK5slvSS1S2BfJ+e2NVzHJtHcyqMW/SgIZ7tSttFjNiyJRJKAVeRdhxVjP7yn5kJ5iHz2pGiSJYSlowRgsQ6XIVph0ce5E8GBEUB2IG2nQPo1FvRYMmSrx/k6aWIeS"\n  }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},8972:(e,n,t)=>{t.d(n,{A:()=>a});var s=t(6540),o=t(4848);function a({src:e,options:n={}}){const a=(0,s.useRef)(null);return(0,s.useEffect)(()=>{let s;return(async()=>{const o=await t.e(459).then(t.bind(t,459)),i=o.default||o;a.current&&i?.create?s=i.create(e,a.current,n):console.error("Failed to load AsciinemaPlayer or its create() method")})(),()=>{s=null}},[e,n]),(0,o.jsx)("div",{ref:a})}}}]);